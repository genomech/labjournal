function FileExt() { local full=$(realpath $1); local basename=$(basename $full); echo ${basename#*.} >&1; };
function FileBase() { local full=$(realpath $1); basename $full .$(FileExt $1) >&1; };
daemonic_dir="/dev/datasets/FairWind/.cloud/core/labjournal/scripts/daemonic_pipe";
annovar_dir="/dev/datasets/FairWind/_tools/annovar";
threads=10;
genome_fa="/dev/datasets/FairWind/_db/hg19/hg19.fa";
exome_bed="/dev/datasets/FairWind/_results/CNTN6/exome_plus50.bed";
min_qual=20;
min_coverage=10;
max_coverage=200;
genome_assembly="hg19";
OPERATIONS_DIR="/dev/datasets/FairWind/_results/cut/NEW";
mkdir -p $OPERATIONS_DIR/temp;
mkdir -p $OPERATIONS_DIR/dupless;
mkdir -p $OPERATIONS_DIR/strandless;
mkdir -p $OPERATIONS_DIR/final;
mkdir -p $OPERATIONS_DIR/vcf;
mkdir -p $OPERATIONS_DIR/tables;
for file in /dev/datasets/FairWind/_results/cut/uncut_bam/sample*.bam;
do {
input_bam=$file;
base=$(FileBase $file);
output_bam_temp0=""$OPERATIONS_DIR"/temp/"$base"_temp0.bam";
picard_metrics_txt=""$OPERATIONS_DIR"/dupless/"$base"_dupless_metrics.txt";
dupless_bam=""$OPERATIONS_DIR"/dupless/"$base"_dupless.bam";
strandless_bam=""$OPERATIONS_DIR"/strandless/"$base"_strandless.bam";
strandless_metrics_txt=""$OPERATIONS_DIR"/strandless/"$base"_strandless_metrics.txt";
output_bam=""$OPERATIONS_DIR"/final/"$base"_final.bam";
output_vcf=""$OPERATIONS_DIR"/vcf/"$base"_filtercalls_c-"$min_coverage"-"$max_coverage"_q"$min_qual".vcf";
output_csv=""$OPERATIONS_DIR"/tables/"$base"_daemonically_annotated.csv";
freebayes -0 --min-coverage $min_coverage --max-coverage $max_coverage -f $genome_fa -t $exome_bed -b $output_bam | bcftools filter -i "QUAL > "$min_qual"" | vcflib vcfallelicprimitives > $output_vcf;
perl $annovar_dir/table_annovar.pl $output_vcf $annovar_dir/humandb -buildver $genome_assembly -protocol knownGene,ensGene,refGene,abraom,AFR.sites.2015_08,ALL.sites.2015_08,AMR.sites.2015_08,ASN.sites.2012_04,avgwas_20150121,avsift,avsnp150,cadd13,cg69,clinvar_20190305,cosmic70,dann,dbnsfp35c,dbscsnv11,EAS.sites.2015_08,eigen,esp6500_all,EUR.sites.2015_08,exac03,fathmm,gene4denovo201907,gerp++,gme,gnomad211_genome,gwava,hrcr1,icgc21,intervar_20180118,kaviar_20150923,ljb26_all,mcap13,mitimpact24,MT_ensGene,nci60,popfreq_all_20150413,regsnpintron,revel,SAS.sites.2015_08,snp142 --operation g,g,g,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f,f --remove --vcfinput --thread $threads;
python3 $daemonic_dir/annofit.py $output_vcf."$genome_assembly"_multianno.txt $output_csv;
} done;
